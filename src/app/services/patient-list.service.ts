import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { combineLatest, lastValueFrom, map, Observable } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
export class PatientListService {
  baseURL = 'https://amei-dev.amorsaude.com.br/api/v1';
  token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoidXN1YXJpbzJAZW1haWwuY29tIiwiZnVsbE5hbWUiOiJKb8OjbyBkYSBTaWx2YSIsImxvZ2dlZENsaW5pYyI6W3siaWQiOjEsImRlc2NyaWNhbyI6IlN1emFubyBJIiwiZmxnQ2VudHJhbCI6IjAifV0sInJvbGUiOiJ1c2VyIiwicm9sZUlkIjp7ImlkIjoxLCJkZXNjcmljYW8iOiJNQVRSSVoifSwicGVybWlzc2lvbnMiOlt7Im1vZHVsZSI6ImZpbmFuY2lhbCIsInR5cGUiOiJyb3V0ZSIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119LHsibW9kdWxlIjoiaGVhbHRoLWluc3VyYW5jZSIsInR5cGUiOiJyb3V0ZSIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119LHsibW9kdWxlIjoibGFiIiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJwYXRpZW50IiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbeyJtb2R1bGUiOiJjcmVhdGUiLCJ0eXBlIjoiYWN0aW9uIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJlZGl0IiwidHlwZSI6ImFjdGlvbiIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119LHsibW9kdWxlIjoidmlldyIsInR5cGUiOiJhY3Rpb24iLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfV19LHsibW9kdWxlIjoicmVnaXN0ZXIiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOlt7Im1vZHVsZSI6ImF0dGVuZGFuY2UtcGxhY2UiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOlt7Im1vZHVsZSI6ImNyZWF0ZSIsInR5cGUiOiJhY3Rpb24iLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6ImVkaXQiLCJ0eXBlIjoiYWN0aW9uIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJ2aWV3IiwidHlwZSI6ImFjdGlvbiIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119XX0seyJtb2R1bGUiOiJjdXJyZW50LWFjY291bnQiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOlt7Im1vZHVsZSI6ImJhbmsiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfV19LHsibW9kdWxlIjoiZW1wbG95ZWUiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOlt7Im1vZHVsZSI6ImNyZWF0ZSIsInR5cGUiOiJhY3Rpb24iLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6ImVkaXQiLCJ0eXBlIjoiYWN0aW9uIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJ2aWV3IiwidHlwZSI6ImFjdGlvbiIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119XX0seyJtb2R1bGUiOiJleHBlcnRpc2UtYXJlYSIsInR5cGUiOiJyb3V0ZSIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W3sibW9kdWxlIjoiY3JlYXRlIiwidHlwZSI6ImFjdGlvbiIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119LHsibW9kdWxlIjoiZWRpdCIsInR5cGUiOiJhY3Rpb24iLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6InZpZXciLCJ0eXBlIjoiYWN0aW9uIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX1dfSx7Im1vZHVsZSI6InBhcnRuZXIiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6InByaWNlLXRhYmxlIiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbeyJtb2R1bGUiOiJjcmVhdGUiLCJ0eXBlIjoiYWN0aW9uIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX1dfSx7Im1vZHVsZSI6InByb2NlZHVyZSIsInR5cGUiOiJyb3V0ZSIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W3sibW9kdWxlIjoiY3JlYXRlIiwidHlwZSI6ImFjdGlvbiIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119LHsibW9kdWxlIjoiZWRpdCIsInR5cGUiOiJhY3Rpb24iLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6Imdyb3VwIiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJ0eXBlIiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJ2aWV3IiwidHlwZSI6ImFjdGlvbiIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119XX0seyJtb2R1bGUiOiJwcm9mZXNzaW9uYWwiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOlt7Im1vZHVsZSI6ImNyZWF0ZSIsInR5cGUiOiJhY3Rpb24iLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6ImVkaXQiLCJ0eXBlIjoiYWN0aW9uIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJwcm9jZWR1cmVzIiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJyZWNlaXZlZC1zcGxpdHMiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6InNjaGVkdWxlIiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJ2aWV3IiwidHlwZSI6ImFjdGlvbiIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119XX0seyJtb2R1bGUiOiJwcm9wb3NhbCIsInR5cGUiOiJyb3V0ZSIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119LHsibW9kdWxlIjoicHJvdmlkZXIiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOlt7Im1vZHVsZSI6ImNyZWF0ZSIsInR5cGUiOiJhY3Rpb24iLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6ImVkaXQiLCJ0eXBlIjoiYWN0aW9uIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJzZWFyY2giLCJ0eXBlIjoiYWN0aW9uIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJ2aWV3IiwidHlwZSI6ImFjdGlvbiIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119XX0seyJtb2R1bGUiOiJ0ZWNobmljYWwtcmVwb3J0IiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX1dfSx7Im1vZHVsZSI6InJlcG9ydCIsInR5cGUiOiJyb3V0ZSIsInBlcm1pc3Npb24iOnRydWUsInN1Yk1vZHVsZSI6W119LHsibW9kdWxlIjoic2NoZWR1bGUiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6InN0YXJ0IiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJ3YWl0aW5nLXJvb20iLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOlt7Im1vZHVsZSI6ImFmdGVyLWFwcG9pbnRtZW50IiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJtZWRpY2FsLWNhcmUiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOlt7Im1vZHVsZSI6ImNvdmVyLXNoZWV0IiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJldmFsdWF0aW9uIiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX0seyJtb2R1bGUiOiJvYmplY3RpdmUiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6InBsYW4iLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfSx7Im1vZHVsZSI6InN1YmplY3RpdmUiLCJ0eXBlIjoicm91dGUiLCJwZXJtaXNzaW9uIjp0cnVlLCJzdWJNb2R1bGUiOltdfV19LHsibW9kdWxlIjoicmVjZXB0aW9uIiwidHlwZSI6InJvdXRlIiwicGVybWlzc2lvbiI6dHJ1ZSwic3ViTW9kdWxlIjpbXX1dfV0sImlhdCI6MTY2NzI1NzE5MiwiZXhwIjoxNjY3Mjg1OTkyfQ.DHwPtwT4aWJNmKFpC5Yzwk1357H-EssLxviGsJwCNt8';

  constructor(private http: HttpClient) {}

  listProcedureGroupsWithFilters(filters: any): Observable<any> {
    return this.http.get<any>(`${this.baseURL}/`, {
      headers: this.getHeader(),
      params: <HttpParams>(<unknown>filters),
    });
  }

  getPatients(): Promise<any> {
    return lastValueFrom(this.http.get(`${this.baseURL}`));
  }

  // async getAllPatients(): Promise<any> {
  //   let response: any = await lastValueFrom(this.http.get(`${this.baseURL}`));
  //   this.store.dispatch([new FetchAll(response)]);
  // }

  async getPatientCreate(): Promise<any> {
    let response: any = await lastValueFrom(
      this.http.get(`${this.baseURL}/new`)
    );

    return response;
    // this.store.dispatch([new FetchAll(response)]);
  }

  FetchAllEntities(
    filters: any = {},
    entityName: string = ''
  ): Observable<any> {
    const results: Observable<any> = this.http.get(
      `${this.baseURL}/pacientes/`,
      {
        headers: this.getHeader(),
        params: <HttpParams>(<unknown>filters),
      }
    );

    const fields: Observable<any> = this.http.get(
      'assets/patients.fields.json'
    );

    debugger;

    return combineLatest([results, fields]).pipe(
      map(([results, fields]) => {
        const newPayload = {
          filters,
          fields: { ...fields },
          results: [...results.items],
        };

        return newPayload;
      })
    );
  }

  private getHeader(): HttpHeaders {
    const head = new HttpHeaders()
      .set('content-type', 'application/json')
      .set('Authorization', `Bearer ${this.token}`);
    return head;
  }
}
